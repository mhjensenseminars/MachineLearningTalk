TITLE: Thirty Years of Education and Research on Nuclear Many-
Body Physics at the ECT*; from traditional methods to quantum computing and machine learning
AUTHOR: Morten Hjorth-Jensen at Department of Physics and Astronomy and FRIB, Michigan State University, USA, and Department of Physics and Center for Computing in Science Education, University of Oslo, Norway
DATE: 30th anniversary ECT*, October 4, 2023


!split
===== What is this talk about? =====
!bblock
The main emphasis is to give you a short and pedestrian introduction to the whys and hows we can use (with several examples) machine learning methods
in nuclear physics. And why this could (or should) be of interest. 
!eblock


!bblock Additional info
These slides are at URL:"https://mhjensenseminars.github.io/MachineLearningTalk/doc/web/overview.html". Scroll down the page.

* Parts of this talk are based on "Artificial Intelligence and Machine Learning in Nuclear Physics, Amber Boehnlein et al., Reviews Modern of Physics 94, 031003 (2022)":"https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.94.031003" 


!eblock

!split
===== Thanks to many =====

Jane Kim (MSU), Julie Butler (MSU), Patrick Cook (MSU), Danny Jammooa (MSU), Daniel Bazin (MSU), Dean Lee (MSU), Witek Nazarewicz (MSU), Michelle Kuchera (Davidson College), Even Nordhagen (UiO), Robert Solli (UiO, Expert Analytics), Bryce Fore (ANL), Alessandro Lovato (ANL), Stefano Gandolfi (LANL), Francesco Pederiva (UniTN), and Giuseppe Carleo (EPFL). Excuses to those I have omitted.


!split
===== The first postdocs and long-term visitors, 1994-1996 =====

o Two Brazilians professors on a sabbatical, Marta Barroso and Carlos Aguiar, later Ed Tomosiak from Canada
o "Alexandar Belic":"http://www.scl.rs/scl-members/members/28-scl-members/members/413-aleksandar-belic-cv"
o "Dennis Bonatsos":"http://www.inp.demokritos.gr/staff-members/dennis-bonatsos/"
o "Fabio DeBlasio":"https://en.unimib.it/fabio-vittorio-de-blasio"
o "Dima Fedorov":"https://pure.au.dk/portal/en/persons/dmitri-fedorov(9a03b124-d457-419c-b2e6-ca4e686b3b96).html"
o Hilmar Forkel
o "Antje H\"oring":"https://www.crab.org/research-statisticians.html"
o Gianluca Lazzari
o "Mathias Lutz":"https://www.physik.tu-darmstadt.de/der_fachbereich/lehrende_physik/professor_innen_details_26176.en.jsp"
o "Jochen Rau":"https://www.q-info.org/about-me/"
o and MHJ

!split
===== Villa Tambosi, summer 1995 =====


FIGURE: [Photos/mhj1995.jpeg, width=900 frac=1.0]



!split
===== One of the first many-body workshops, June-July 1997 =====


FIGURE: [Photos/manybody1997.jpeg, width=900 frac=1.0]


!split
===== Educational mission and strategic commitments =====



!split
===== The second Nuclear Talent course at the ECT*, summer 2014 =====


FIGURE: [Photos/talent2014a.jpg, width=900 frac=1.0]

!split
===== The second Nuclear Talent course at the ECT*, summer 2014 =====

FIGURE: [Photos/talent2014b.jpg, width=900 frac=1.0]


!split
===== Nuclear Talent course summer 2017 =====


FIGURE: [Photos/talent2017.jpg, width=900 frac=1.0]



!split
===== A simple perspective on the interface between ML and Physics =====

FIGURE: [figures/mlimage.png, width=800 frac=1.0]


!split
===== ML in Nuclear  Physics =====

FIGURE: [figures/ML-NP.pdf, width=900 frac=1.0]






!split
=====  AI/ML and some statements you may have heard (and what do they mean?)  =====

o Fei-Fei Li on ImageNet: _map out the entire world of objects_ ("The data that transformed AI research":"https://cacm.acm.org/news/219702-the-data-that-transformed-ai-research-and-possibly-the-world/fulltext")
o Russell and Norvig in their popular textbook: _relevant to any intellectual task; it is truly a universal field_ ("Artificial Intelligence, A modern approach":"http://aima.cs.berkeley.edu/")
o Woody Bledsoe puts it more bluntly: _in the long run, AI is the only science_ (quoted in Pamilla McCorduck, "Machines who think":"https://www.pamelamccorduck.com/machines-who-think")


If you wish to have a critical read on AI/ML from a societal point of view, see "Kate Crawford's recent text Atlas of AI":"https://www.katecrawford.net/"

_Here: with AI/ML we intend a collection of machine learning methods with an emphasis on statistical learning and data analysis_


!split
===== Scientific Machine Learning =====

An important and emerging field is what has been dubbed as scientific ML, see the article by Deiana et al "Applications and Techniques for Fast Machine Learning in Science, arXiv:2110.13041":"https://arxiv.org/abs/2110.13041"

!bblock
The authors discuss applications and techniques for fast machine
learning (ML) in science -- the concept of integrating power ML
methods into the real-time experimental data processing loop to
accelerate scientific discovery. The report covers three main areas

o applications for fast ML across a number of scientific domains;
o techniques for training and implementing performant and resource-efficient ML algorithms;
o and computing architectures, platforms, and technologies for deploying these algorithms.

!eblock




!split
===== Machine Learning and Physics =====
!bblock
Machine learning  is an extremely rich field, in spite of its young age. The
increases we have seen during the last three decades in computational
capabilities have been followed by developments of methods and
techniques for analyzing and handling large date sets, relying heavily
on statistics, computer science and mathematics.  The field is rather
new and developing rapidly. 

Popular software packages written in Python for ML are

* "Scikit-learn":"http://scikit-learn.org/stable/", 
* "Tensorflow":"https://www.tensorflow.org/",
* "PyTorch":"http://pytorch.org/"
* "Keras":"https://keras.io/",
and more. These are all freely available at their respective GitHub sites. They 
encompass communities of developers in the thousands or more. And the number
of code developers and contributors keeps increasing.
!eblock

!split
===== Lots of room for creativity =====
!bblock
Not all the
algorithms and methods can be given a rigorous mathematical
justification, opening up thereby for experimenting
and trial and error and thereby exciting new developments. 
!eblock

!bblock
A solid command of linear algebra, multivariate theory, 
probability theory, statistical data analysis, optimization algorithms, 
understanding errors and Monte Carlo methods is important in order to understand many of the 
various algorithms and methods. 
!eblock

_Job market, a personal statement_: "A familiarity with ML is almost becoming a prerequisite for many of the most exciting employment opportunities":"https://www.analyticsindiamag.com/top-countries-hiring-most-number-of-artificial-intelligence-machine-learning-experts/". And add quantum computing and there you are!



!split
===== Types of machine learning =====

!bblock
The approaches to machine learning are many, but are often split into two main categories. 
In *supervised learning* we know the answer to a problem,
and let the computer deduce the logic behind it. On the other hand, *unsupervised learning*
is a method for finding patterns and relationship in data sets without any prior knowledge of the system.
Some authours also operate with a third category, namely *reinforcement learning*. This is a paradigm 
of learning inspired by behavioural psychology, where learning is achieved by trial-and-error, 
solely from rewards and punishment.
!eblock

!split
===== Main categories =====
!bblock
Another way to categorize machine learning tasks is to consider the desired output of a system.
Some of the most common tasks are:

  * Classification: Outputs are divided into two or more classes. The goal is to   produce a model that assigns inputs into one of these classes. An example is to identify  digits based on pictures of hand-written ones. Classification is typically supervised learning.

  * Regression: Finding a functional relationship between an input data set and a reference data set.   The goal is to construct a function that maps input data to continuous output values.

  * Clustering: Data are divided into groups with certain common traits, without knowing the different groups beforehand.  It is thus a form of unsupervised learning.
!eblock


!split
===== Machine learning and nuclear theory (my bias): Why? =====

o ML tools can help us to speed up the scientific process cycle and hence facilitate discoveries
o Enabling fast emulation for big simulations
o Revealing the information content of measured observables w.r.t. theory
o Identifying crucial experimental data for better constraining theory
o Providing meaningful input to applications and planned measurements
o ML tools can help us to reveal the structure of our models
o Parameter estimation with heterogeneous/multi-scale datasets
o Model reduction
o ML tools can help us to provide predictive capability
o Theoretical results often involve ultraviolet  and infrared extrapolations due to Hilbert-space truncations 
o Uncertainty quantification essential
o Theoretical models are often applied to entirely new nuclear systems and conditions that are not accessible to experiment


!split
=====  The plethora  of machine learning algorithms/methods =====

o Deep learning: Neural Networks (NN), Convolutional NN, Recurrent NN, Boltzmann machines, autoencoders and variational autoencoders  and generative adversarial networks 
o Bayesian statistics and Bayesian Machine Learning, Bayesian experimental design, Bayesian Regression models, Bayesian neural networks, Gaussian processes and much more
o Dimensionality reduction (Principal component analysis), Clustering Methods and more
o Ensemble Methods, Random forests, bagging and voting methods, gradient boosting approaches 
o Linear and logistic regression, Kernel methods, support vector machines and more
o Reinforcement Learning 
o Generative models and more
!split
===== Examples of Machine Learning methods and applications in nuclear physics =====

!bblock
* _Machine  learning  for  data  mining:_ Oftentimes,  it  is necessary to be able to accurately calculate observables that have not been measured, to supplement the existing databases.
* _Nuclear  density  functional   theory:_ Energy density functional calibration   involving Bayesian optimization  and ML.
* _Nuclear properties with ML:_ Improving predictive power of nuclear models by emulating model residuals.
* _Effective field theory and A-body systems:_ Truncation errors and low-energy coupling constant calibration, nucleon-nucleon scattering calculations, variational calculations with ANN for light nuclei, NN extrapolation of nuclear structure observables
* _Nuclear  shell  model  UQ:_ ML methods  have  been  used  to  provide  UQ  of  configuration  interaction  calculations.
!eblock





!split
===== Examples of Machine Learning methods and applications in nuclear physics, continues =====

!bblock
* _Low-energy nuclear reactions UQ:_ Bayesian optimization studies of the nucleon-nucleus optical potential, R-matrix analyses,  and  statistical spatial networks to study patterns in nuclear reaction networks.
* _Neutron star properties and nuclear matter equation of state:_ constraining the equation of state by properties on neutron stars and selected properties of finite nuclei
* _Experimental design:_ Bayesian ML provides a framework  to  maximize  the  success  of  on  experiment  based on  the  best  information  available  on existing  data, experimental conditions, and theoretical models.
!eblock






!split
===== More examples =====


The large amount of degrees of freedom pertain to both theory and experiment in nuclear physics. With increasingly complicated experiments that produce large amounts data, automated classification of events becomes increasingly important. Here, deep learning methods offer a plethora of interesting research avenues. 

!bblock
* Reconstruction of particle trajectories or classification of events are typical examples where ML methods are being used. However, since these data can often be extremely noisy, the precision necessary for discovery in physics requires algorithmic improvements. Research along such directions, interfacing nuclear physics with AI/ML is expected to play a significant role in physics discoveries related to new facilities.  The treatment of corrupted data in imaging and image processing is also a relevant topic. 

* Design of detectors represents an important area of applications for ML/AI methods in nuclear physics.

!eblock


!split
===== And more   =====

!bblock
* An important application of AI/ML methods is to improve the estimation of bias or uncertainty due to the introduction of or lack of physical constraints in various theoretical models.

* In theory, we expect to use AI/ML algorithms and methods to improve our knowledge about  correlations of physical model parameters in data for quantum many-body systems. Deep learning methods show great promise in circumventing the exploding dimensionalities encountered in quantum mechanical many-body studies. 

* Merging a frequentist approach (the standard path in ML theory) with a Bayesian approach, has the potential to infer better probabilitity distributions and error estimates. As an example, methods for fast Monte-Carlo- based Bayesian computation of nuclear density functionals show great promise in providing a better understanding 

* Machine Learning and Quantum Computing is a very interesting avenue to explore. 
!eblock



!split
===== Selected references =====
!bblock
* "Mehta et al.":"https://arxiv.org/abs/1803.08823" and "Physics Reports (2019)":"https://www.sciencedirect.com/science/article/pii/S0370157319300766?via%3Dihub".
* "Machine Learning and the Physical Sciences by Carleo et al":"https://link.aps.org/doi/10.1103/RevModPhys.91.045002"
* "Artificial Intelligence and Machine Learning in Nuclear Physics, Amber Boehnlein et al., Reviews Modern of Physics 94, 031003 (2022)":"https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.94.031003" 
* "Dilute neutron star matter from neural-network quantum states by Fore et al, Physical Review Research 5, 033062 (2023)":"https://journals.aps.org/prresearch/pdf/10.1103/PhysRevResearch.5.033062"
* "Neural-network quantum states for ultra-cold Fermi gases, Jane Kim et al, Nature Physics Communcication, submitted":"https://doi.org/10.48550/arXiv.2305.08831"
* "Message-Passing Neural Quantum States for the Homogeneous Electron Gas, Gabriel Pescia, Jane Kim et al. arXiv.2305.07240,":"https://doi.org/10.48550/arXiv.2305.07240"
* "Efficient solutions of fermionic systems using artificial neural networks, Nordhagen et al, Frontiers in Physics 11, 2023":"https://doi.org/10.3389/fphy.2023.1061580"
* "Report from the A.I. For Nuclear Physics  Workshop by Bedaque et al., Eur J. Phys. A 57, (2021)":"https://link.springer.com/article/10.1140/epja/s10050-020-00290-x"
* "Particle Data Group summary on ML methods":"https://pdg.lbl.gov/2021/reviews/rpp2021-rev-machine-learning.pdf"
!eblock





!split
===== What are the basic ingredients? =====
!bblock
Almost every problem in ML and data science starts with the same ingredients:
* The dataset $\mathbf{x}$ (could be some observable quantity of the system we are studying)
* A model which is a function of a set of parameters $\mathbf{\alpha}$ that relates to the dataset, say a likelihood  function $p(\mathbf{x}\vert \mathbf{\alpha})$ or just a simple model $f(\mathbf{\alpha})$
* A so-called _loss/cost/risk_ function $\mathcal{C} (\mathbf{x}, f(\mathbf{\alpha}))$ which allows us to decide how well our model represents the dataset. 

We seek to minimize the function $\mathcal{C} (\mathbf{x}, f(\mathbf{\alpha}))$ by finding the parameter values which minimize $\mathcal{C}$. This leads to  various minimization algorithms. It may surprise many, but at the heart of all machine learning algortihms there is an optimization problem. 
!eblock



!split
===== Argon-46 by Solli et al., NIMA 1010, 165461 (2021) =====

!bblock
Representations of two events from the
Argon-46 experiment. Each row is one event in two projections,
where the color intensity of each point indicates higher charge values
recorded by the detector. The bottom row illustrates a carbon event with
a large fraction of noise, while the top row shows a proton event
almost free of noise. 
!eblock


FIGURE: [figures/examples_raw.png, width=500 frac=0.6]


!split
===== Quantum Monte Carlo and deep learning =====
!bblock
Given a hamiltonian $H$ and a trial wave function $\Psi_T$, the variational principle states that the expectation value of $\langle H \rangle$, defined through 
!bt
\[
   \langle E \rangle =
   \frac{\int d\bm{R}\Psi^{\ast}_T(\bm{R})H(\bm{R})\Psi_T(\bm{R})}
        {\int d\bm{R}\Psi^{\ast}_T(\bm{R})\Psi_T(\bm{R})},
\]
!et
is an upper bound to the ground state energy $E_0$ of the hamiltonian $H$, that is 
!bt
\[
    E_0 \le \langle E \rangle.
\]
!et
In general, the integrals involved in the calculation of various  expectation values  are multi-dimensional ones. Traditional integration methods such as the Gauss-Legendre will not be adequate for say the  computation of the energy of a many-body system.  _Basic philosophy: Let a neural network find the optimal wave function_
!eblock

!split
===== Monte Carlo methods and Neural Networks =====

"Machine Learning and the Deuteron by Kebble and Rios":"https://www.sciencedirect.com/science/article/pii/S0370269320305463?via%3Dihub" and
"Variational Monte Carlo calculations of $A\le 4$ nuclei with an artificial neural-network correlator ansatz by Adams et al.":"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.127.022502"

_Adams et al_:

!bt
\begin{align}
H_{LO} &=-\sum_i \frac{{\vec{\nabla}_i^2}}{2m_N}
+\sum_{i<j} {\left(C_1  + C_2\, \vec{\sigma_i}\cdot\vec{\sigma_j}\right)
e^{-r_{ij}^2\Lambda^2 / 4 }}
\nonumber\\
&+D_0 \sum_{i<j<k} \sum_{\text{cyc}}
{e^{-\left(r_{ik}^2+r_{ij}^2\right)\Lambda^2/4}}\,,
\end{align}
!et

where $m_N$ is the mass of the nucleon, $\vec{\sigma_i}$ is the Pauli
matrix acting on nucleon $i$, and $\sum_{\text{cyc}}$ stands for the
cyclic permutation of $i$, $j$, and $k$. The low-energy constants
$C_1$ and $C_2$ are fit to the deuteron binding energy and to the
neutron-neutron scattering length



!split
===== Deep learning neural networks, "Variational Monte Carlo calculations of $A\le 4$ nuclei with an artificial neural-network correlator ansatz by Adams et al.":"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.127.022502" =====


An appealing feature of the neural network ansatz is that it is more general than the more conventional product of two-
and three-body spin-independent Jastrow functions
!bt
\begin{align}
|\Psi_V^J \rangle = \prod_{i<j<k} \Big( 1-\sum_{\text{cyc}} u(r_{ij}) u(r_{jk})\Big) \prod_{i<j} f(r_{ij}) | \Phi\rangle\,,
\end{align}
!et
which is commonly used for nuclear Hamiltonians that do not contain tensor and spin-orbit terms.
The above function is replaced by a four-layer Neural Network. 

!split
===== Explicit results =====
FIGURE: [figures/energyconvergence.pdf, width=700 frac=0.9]


!split
===== "Dilute neutron star matter from neural-network quantum states by Fore et al, Physical Review Research 5, 033062 (2023)":"https://journals.aps.org/prresearch/pdf/10.1103/PhysRevResearch.5.033062" at density $\rho=0.04$ fm$^{-3}$ =====

!bblock
FIGURE: [figures/nmatter.png, width=700 frac=0.9]
!eblock





!split
===== The electron gas in three dimensions with $N=14$ electrons (Wigner-Seitz radius $r_s=2$ a.u.), "Gabriel Pescia, Jane Kim et al. arXiv.2305.07240,":"https://doi.org/10.48550/arXiv.2305.07240" =====

!bblock
FIGURE: [figures/elgasnew.png, width=700 frac=0.9]
!eblock



!split
===== "Efficient solutions of fermionic systems using artificial neural networks, Nordhagen et al, Frontiers in Physics 11, 2023":"https://doi.org/10.3389/fphy.2023.1061580" =====

The Hamiltonian of the quantum dot is given by
!bt
\[ \hat{H} = \hat{H}_0 + \hat{V}, 
\]
!et
where $\hat{H}_0$ is the many-body HO Hamiltonian, and $\hat{V}$ is the
inter-electron Coulomb interactions. In dimensionless units,
!bt
\[ \hat{V}= \sum_{i < j}^N \frac{1}{r_{ij}},
\]
!et
with $r_{ij}=\sqrt{\mathbf{r}_i^2 - \mathbf{r}_j^2}$.

This leads to the  separable Hamiltonian, with the relative motion part given by ($r_{ij}=r$)
!bt
\[ 
\hat{H}_r=-\nabla^2_r + \frac{1}{4}\omega^2r^2+ \frac{1}{r},
\]
!et
plus a standard Harmonic Oscillator problem  for the center-of-mass motion.
This system has analytical solutions in two and three dimensions ("M. Taut 1993 and 1994":"https://journals.aps.org/pra/abstract/10.1103/PhysRevA.48.3561"). 


!split
===== Quantum dots and Boltzmann machines, onebody densities $N=6$, $\hbar\omega=0.1$ a.u. =====

!bblock
FIGURE: [figures/OB6hw01.png, width=700 frac=0.9]
!eblock


!split
===== Onebody densities $N=30$, $\hbar\omega=1.0$ a.u. =====
!bblock
FIGURE: [figures/OB30hw1.png, width=700 frac=0.9]
!eblock


!split
===== Onebody densities $N=30$, $\hbar\omega=0.1$ a.u. =====
!bblock
FIGURE: [figures/OB30hw01.png, width=700 frac=0.9]
!eblock



!split
===== Folding and unfolding and response functions =====

A good read on folding/unfolding is "An Unfolding Method for High Energy Physics Experiments by Volker Blobel":"https://arxiv.org/abs/hep-ex/0208022"

See notebook details and "examples of simple data reconstructed with Gaussian processes":"https://github.com/adambozson/gp-unfold/blob/master/Falling%20exponential.ipynb".



!split
===== Quantified limits of the nuclear landscape =====

"Neufcourt et al., Phys. Rev. C 101, 044307 (2020)":"https://journals.aps.org/prc/abstract/10.1103/PhysRevC.101.044307"
Predictions made with eleven global mass model and Bayesian model averaging

FIGURE: [figures/landscape.jpg, width=800 frac=1.0]



!split
===== Observations and perspectives =====
!bblock
* Need for AI/Machine Learning in nuclear physics, lots of ongoing activities
* To solve many complex problems in the field and facilitate discoveries, multidisciplinary efforts efforts are required involving scientists in  nuclear physics, statistics, computational science, and applied math.
* There is a need for  focused AI/ML learning efforts that will benefit accelerator science and experimental and theoretical programs
!eblock

!split
===== How can we use ML in Nuclear Science? =====
!bblock
* How do we develop insights, competences, knowledge in statistical learning that can advance our field?
  * For example: Can we use ML to find out which correlations are relevant and thereby diminish the dimensionality problem in standard many-body  theories?
  * Can we use AI/ML in detector analysis, accelerator design, analysis of experimental data and more?
  * Can we use AL/ML to carry out reliable extrapolations by using current experimental knowledge and current theoretical models?
  * Future research may have a strong focus on generative models
* The community needs to invest in relevant educational efforts and training of nuclear physicists with knowledge in AI/ML
* Most likely tons of things we have forgotten
!eblock


!split
===== Possible start to raise awareness about ML in our field =====
!bblock 
* Make an ML challenge in nuclear physics a la "Learning to discover: the Higgs boson machine learning challenge":"https://home.cern/news/news/computing/higgs-boson-machine-learning-challenge". Alternatively go to kaggle.com at URL:"https://www.kaggle.com/c/higgs-boson"
* HEP@CERN and HEP in general have made significant impacts in the field of machine learning and AI. Something to learn from
!eblock






!split
===== Additional material =====




!split
===== Addendum: Quantum Monte Carlo Motivation =====
!bblock
Given a hamiltonian $H$ and a trial wave function $\Psi_T$, the variational principle states that the expectation value of $\langle H \rangle$, defined through 
!bt
\[
   \langle E \rangle =
   \frac{\int d\bm{R}\Psi^{\ast}_T(\bm{R})H(\bm{R})\Psi_T(\bm{R})}
        {\int d\bm{R}\Psi^{\ast}_T(\bm{R})\Psi_T(\bm{R})},
\]
!et
is an upper bound to the ground state energy $E_0$ of the hamiltonian $H$, that is 
!bt
\[
    E_0 \le \langle E \rangle.
\]
!et
In general, the integrals involved in the calculation of various  expectation values  are multi-dimensional ones. Traditional integration methods such as the Gauss-Legendre will not be adequate for say the  computation of the energy of a many-body system.
!eblock


!split
===== Quantum Monte Carlo Motivation =====
!bblock Basic steps
Choose a trial wave function
$\psi_T(\bm{R})$.
!bt
\[
   P(\bm{R},\bm{\alpha})= \frac{\left|\psi_T(\bm{R},\bm{\alpha})\right|^2}{\int \left|\psi_T(\bm{R},\bm{\alpha})\right|^2d\bm{R}}.
\]
!et
This is our model, or likelihood/probability distribution function  (PDF). It depends on some variational parameters $\bm{\alpha}$.
The approximation to the expectation value of the Hamiltonian is now 
!bt
\[
   \langle E[\bm{\alpha}] \rangle = 
   \frac{\int d\bm{R}\Psi^{\ast}_T(\bm{R},\bm{\alpha})H(\bm{R})\Psi_T(\bm{R},\bm{\alpha})}
        {\int d\bm{R}\Psi^{\ast}_T(\bm{R},\bm{\alpha})\Psi_T(\bm{R},\bm{\alpha})}.
\]
!et
!eblock


!split
===== Quantum Monte Carlo Motivation =====
!bblock Define a new quantity
!bt
\[
   E_L(\bm{R},\bm{\alpha})=\frac{1}{\psi_T(\bm{R},\bm{\alpha})}H\psi_T(\bm{R},\bm{\alpha}),
\]
!et
called the local energy, which, together with our trial PDF yields
!bt
\[
  \langle E[\bm{\alpha}] \rangle=\int P(\bm{R})E_L(\bm{R},\bm{\alpha}) d\bm{R}\approx \frac{1}{N}\sum_{i=1}^NE_L(\bm{R_i},\bm{\alpha})
\]
!et
with $N$ being the number of Monte Carlo samples.
!eblock

!split
===== The trial wave function =====
!bblock
We want to perform  a Variational Monte Carlo calculation of the ground state of two electrons in a quantum dot well with different oscillator energies, assuming total spin $S=0$.
Our trial wave function has the following form
!bt
\begin{equation}
   \psi_{T}(\bm{r}_1,\bm{r}_2) = 
   C\exp{\left(-\alpha_1\omega(r_1^2+r_2^2)/2\right)}
   \exp{\left(\frac{r_{12}}{(1+\alpha_2 r_{12})}\right)}, 
label{eq:trial}
\end{equation}
!et
where the variables $\alpha_1$ and $\alpha_2$ represent our variational parameters.

Why does the trial function look like this? How did we get there? _This is one of our main motivations_ for switching to
Machine Learning.

!eblock

!split
===== The correlation part of the wave function =====

To find an ansatz for the correlated part of the wave function, it is useful to rewrite the two-particle
local energy in terms of the relative and center-of-mass motion.
Let us denote the distance between the two electrons as
$r_{12}$. We omit the center-of-mass motion since we are only interested in the case when
$r_{12} \rightarrow 0$. The contribution from the center-of-mass (CoM) variable $\bm{R}_{\mathrm{CoM}}$
gives only a finite contribution.
We focus only on the terms that are relevant for $r_{12}$ and for three dimensions. The relevant local energy operator becomes then (with $l=0$)
!bt
\[
\lim_{r_{12} \rightarrow 0}E_L(R)=
    \frac{1}{{\cal R}_T(r_{12})}\left(-2\frac{d^2}{dr_{ij}^2}-\frac{4}{r_{ij}}\frac{d}{dr_{ij}}+
\frac{2}{r_{ij}}\right){\cal R}_T(r_{12}).
\]
!et
In order to avoid divergencies when $r_{12}\rightarrow 0$ we obtain  the so-called _cusp_ condition
!bt
\[
\frac{d {\cal R}_T(r_{12})}{dr_{12}} = \frac{1}{2}
{\cal R}_T(r_{12})\qquad r_{12}\to 0
\]
!et

!split
===== Resulting ansatz =====
The above  results in
!bt
\[
{\cal R}_T  \propto \exp{(r_{ij}/2)}, 
\]
!et 
for anti-parallel spins and 
!bt
\[
{\cal R}_T  \propto \exp{(r_{ij}/4)}, 
\]
!et
for anti-parallel spins. 
This is the so-called cusp condition for the relative motion, resulting in a minimal requirement
for the correlation part of the wave fuction.
For general systems containing more than say two electrons, we have this
condition for each electron pair $ij$.





!split
===== Energy derivatives =====
!bblock
To find the derivatives of the local energy expectation value as function of the variational parameters, we can use the chain rule and the hermiticity of the Hamiltonian.  

Let us define (with the notation $\langle E[\bm{\alpha}]\rangle =\langle  E_L\rangle$)
!bt
\[
\bar{E}_{\alpha_i}=\frac{d\langle  E_L\rangle}{d\alpha_i},
\]
!et
as the derivative of the energy with respect to the variational parameter $\alpha_i$
We define also the derivative of the trial function (skipping the subindex $T$) as 
!bt
\[
\bar{\Psi}_{i}=\frac{d\Psi}{d\alpha_i}.
\]
!et  
!eblock


!split
===== Derivatives of the local energy ===== 
!bblock
The elements of the gradient of the local energy are then (using the chain rule and the hermiticity of the Hamiltonian)
!bt
\[
\bar{E}_{i}= 2\left( \langle \frac{\bar{\Psi}_{i}}{\Psi}E_L\rangle -\langle \frac{\bar{\Psi}_{i}}{\Psi}\rangle\langle E_L \rangle\right).
\]
!et
From a computational point of view it means that you need to compute the expectation values of 
!bt
\[
\langle \frac{\bar{\Psi}_{i}}{\Psi}E_L\rangle,
\]
!et
and
!bt
\[
\langle \frac{\bar{\Psi}_{i}}{\Psi}\rangle\langle E_L\rangle
\]
!et
These integrals are evaluted using MC intergration (with all its possible error sources). 
We can then use methods like stochastic gradient or other minimization methods to find the optimal variational parameters (I don't discuss this topic here, but these methods are very important in ML). 
!eblock

!split
===== How do we define our cost function? =====
!bblock
We have a model, our likelihood function. 

How should we define the cost function?

!eblock

!split
===== Meet the variance and its derivatives  =====
!bblock Why the variance?
Suppose the trial function (our model) is the exact wave function. The action of the hamiltionan
on the wave function
!bt
\[
   H\Psi = \mathrm{constant}\times \Psi,
\]
!et
The integral which defines various 
expectation values involving moments of the hamiltonian becomes then
!bt
\[
   \langle E^n \rangle =   \langle H^n \rangle =
   \frac{\int d\bm{R}\Psi^{\ast}(\bm{R})H^n(\bm{R})\Psi(\bm{R})}
        {\int d\bm{R}\Psi^{\ast}(\bm{R})\Psi(\bm{R})}=
\mathrm{constant}\times\frac{\int d\bm{R}\Psi^{\ast}(\bm{R})\Psi(\bm{R})}
        {\int d\bm{R}\Psi^{\ast}(\bm{R})\Psi(\bm{R})}=\mathrm{constant}.
\]
!et
_This gives an important information: If I want the variance, the exact wave function leads to zero variance!_
The variance is defined as 
!bt
\[
\sigma_E = \langle E^2\rangle - \langle E\rangle^2.
\]
!et
Variation is then performed by minimizing both the energy and the variance.

!eblock


!split
===== The variance defines the cost function  =====
!bblock 
We can then take the derivatives of 
!bt
\[
\sigma_E = \langle E^2\rangle - \langle E\rangle^2,
\]
!et
with respect to the variational parameters. The derivatives of the variance can then be used to defined the
so-called Hessian matrix, which in turn allows us to use minimization methods like Newton's method or 
standard gradient methods. 

This leads to however a more complicated expression, with obvious errors when evaluating integrals by Monte Carlo integration. Less used, see however "Filippi and Umrigar":"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.94.150201". The expression becomes complicated
!bt
\begin{align}
\bar{E}_{ij} &= 2\left[ \langle (\frac{\bar{\Psi}_{ij}}{\Psi}+\frac{\bar{\Psi}_{j}}{\Psi}\frac{\bar{\Psi}_{i}}{\Psi})(E_L-\langle E\rangle)\rangle -\langle \frac{\bar{\Psi}_{i}}{\Psi}\rangle\bar{E}_j-\langle \frac{\bar{\Psi}_{j}}{\Psi}\rangle\bar{E}_i\right] \\ \nonumber
&+\langle \frac{\bar{\Psi}_{i}}{\Psi}E_L{_j}\rangle +\langle \frac{\bar{\Psi}_{j}}{\Psi}E_L{_i}\rangle -\langle \frac{\bar{\Psi}_{i}}{\Psi}\rangle\langle E_L{_j}\rangle \langle \frac{\bar{\Psi}_{j}}{\Psi}\rangle\langle E_L{_i}\rangle.  
\end{align}
!et

Evaluating the cost function means having to evaluate the above second derivative of the energy. 

!eblock





!split
===== Why Boltzmann machines? =====

What is known as restricted Boltzmann Machines (RMB) have received a
lot of attention lately.  One of the major reasons is that they can be
stacked layer-wise to build deep neural networks that capture
complicated statistics.

The original RBMs had just one visible layer and a hidden layer, but
recently so-called Gaussian-binary RBMs have gained quite some
popularity in imaging since they are capable of modeling continuous
data that are common to natural images.

Furthermore, they have been used to solve complicated quantum
mechanical many-particle problems or classical statistical physics
problems like the Ising and Potts classes of models.




!split
===== A standard BM setup =====

!bblock
A standard BM network is divided into a set of observable and visible units $\hat{x}$ and a set of unknown hidden units/nodes $\hat{h}$.
!eblock

!bblock
Additionally there can be bias nodes for the hidden and visible layers. These biases are normally set to $1$.
!eblock

!bblock
BMs are stackable, meaning we can train a BM which serves as input to another BM. We can construct deep networks for learning complex PDFs. The layers can be trained one after another, a feature which makes them popular in deep learning
!eblock

However, they are often hard to train. This leads to the introduction of so-called restricted BMs, or RBMS.
Here we take away all lateral connections between nodes in the visible layer as well as connections between nodes in the hidden layer. The network is illustrated in the figure below.



!split
===== The structure of the RBM network =====

FIGURE: [figures/RBM.pdf, width=800 frac=1.0]



!split
===== The network =====

_The network layers_:
  o A function $\mathbf{x}$ that represents the visible layer, a vector of $M$ elements (nodes). This layer represents both what the RBM might be given as training input, and what we want it to be able to reconstruct. This might for example be the pixels of an image, the spin values of the Ising model, or coefficients representing speech.
  o The function $\mathbf{h}$ represents the hidden, or latent, layer. A vector of $N$ elements (nodes). Also called "feature detectors".


!split
===== Joint distribution =====

The restricted Boltzmann machine is described by a Boltzmann distribution
!bt
\begin{align}
	P_{rbm}(\mathbf{x},\mathbf{h}) = \frac{1}{Z} e^{-\frac{1}{T_0}E(\mathbf{x},\mathbf{h})},
\end{align}
!et
where $Z$ is the normalization constant or partition function, defined as 
!bt
\begin{align}
	Z = \int \int e^{-\frac{1}{T_0}E(\mathbf{x},\mathbf{h})} d\mathbf{x} d\mathbf{h}.
\end{align}
!et
It is common to ignore $T_0$ by setting it to one. 





!split
===== Defining different types of RBMs =====

There are different variants of RBMs, and the differences lie in the types of visible and hidden units we choose as well as in the implementation of the energy function $E(\mathbf{x},\mathbf{h})$. 

!bblock Binary-Binary RBM:

RBMs were first developed using binary units in both the visible and hidden layer. The corresponding energy function is defined as follows:
!bt
\begin{align}
	E(\mathbf{x}, \mathbf{h}) = - \sum_i^M x_i a_i- \sum_j^N b_j h_j - \sum_{i,j}^{M,N} x_i w_{ij} h_j,
\end{align}
!et
where the binary values taken on by the nodes are most commonly 0 and 1.
!eblock
!bblock Gaussian-Binary RBM:

Another variant is the RBM where the visible units are Gaussian while the hidden units remain binary:
!bt
\begin{align}
	E(\mathbf{x}, \mathbf{h}) = \sum_i^M \frac{(x_i - a_i)^2}{2\sigma_i^2} - \sum_j^N b_j h_j - \sum_{i,j}^{M,N} \frac{x_i w_{ij} h_j}{\sigma_i^2}. 
\end{align}
!et
!eblock






!split
===== Representing the wave function =====

The wavefunction should be a probability amplitude depending on $\bm{x}$. The RBM model is given by the joint distribution of $\bm{x}$ and $\bm{h}$
!bt
\begin{align}
	F_{rbm}(\mathbf{x},\mathbf{h}) = \frac{1}{Z} e^{-\frac{1}{T_0}E(\mathbf{x},\mathbf{h})}.
\end{align}
!et
To find the marginal distribution of $\bm{x}$ we set:
!bt
\begin{align}
	F_{rbm}(\mathbf{x}) &= \sum_\mathbf{h} F_{rbm}(\mathbf{x}, \mathbf{h}) \\
				&= \frac{1}{Z}\sum_\mathbf{h} e^{-E(\mathbf{x}, \mathbf{h})}.
\end{align}
!et
Now this is what we use to represent the wave function, calling it a neural-network quantum state (NQS)
!bt
\begin{align}
	\Psi (\mathbf{x}) &= F_{rbm}(\mathbf{x}) \\
	&= \frac{1}{Z}\sum_{\bm{h}} e^{-E(\mathbf{x}, \mathbf{h})} \\
	&= \frac{1}{Z} \sum_{\{h_j\}} e^{-\sum_i^M \frac{(x_i - a_i)^2}{2\sigma^2} + \sum_j^N b_j h_j + \sum_{i,j}^{M,N} \frac{x_i w_{ij} h_j}{\sigma^2}} \\
	&= \frac{1}{Z} e^{-\sum_i^M \frac{(x_i - a_i)^2}{2\sigma^2}} \prod_j^N (1 + e^{b_j + \sum_i^M \frac{x_i w_{ij}}{\sigma^2}}). \\
\end{align}
!et

!split
===== Choose the cost/loss function =====

Now we don't necessarily have training data (unless we generate it by
using some other method). However, what we do have is the variational
principle which allows us to obtain the ground state wave function by
minimizing the expectation value of the energy of a trial wavefunction
(corresponding to the untrained NQS). Similarly to the traditional
variational Monte Carlo method then, it is the local energy we wish to
minimize. The gradient to use for the stochastic gradient descent
procedure is

!bt
\begin{align}
	\frac{\partial \langle E_L \rangle}{\partial \theta_i}
	= 2(\langle E_L \frac{1}{\Psi}\frac{\partial \Psi}{\partial \theta_i} \rangle - \langle E_L \rangle \langle \frac{1}{\Psi}\frac{\partial \Psi}{\partial \theta_i} \rangle ),
\end{align}
!et
where the local energy is given by
!bt
\begin{align}
	E_L = \frac{1}{\Psi} \hat{\mathbf{H}} \Psi.
\end{align}
!et



!split
===== Overview and Motivation =====

_How to use many-body theory to design quantum circuits (Quantum engineering)_
o Many-body methods like F(ull)C(onfiguration)I(nteraction) theory  with
  * Adaptive basis sets (see for example "Sigmundson et al arXiv:2111.09638":"https://arxiv.org/abs/2111.09638")
  * Time dependence
  * Optimization of experimental parameter 
  * Feedback from experiment
o Finding optimal parameters for tuning of entanglement
o Numerical experiments to mimick real systems, using many-body methods to develop _quantum twins_ ("inspiration from  work by Herschel Rabitz et al on Control of quantum phenomena, see New Journal of Physics 12 (2010) 075008":"https://iopscience.iop.org/article/10.1088/1367-2630/12/7/075008")!


!split
===== Collaborators and people to thank =====

!bblock MSU
Niyaz Beysengulov and Johannes Pollanen (experiment, Physics); Zachary Stewart, Jared Weidman, and Angela Wilson (quantum chemistry)
!eblock
!bblock University of Oslo
Øyvind Sigmundson Schøyen, Stian Dysthe Bilek, and Håkon Emil Kristiansen (Physics and quantum chemistry). In addition collaboration on point defects with Marianne Bathen and Lasse Vines.
!eblock



!split
===== What is this talk about? =====

Here we describe a method for generating motional entanglement between
two electrons trapped above the surface of superfluid helium. In this
proposed scheme these electronic charge qubits are laterally confined
via electrostatic gates to create an anharmonic trapping
potential. When the system is cooled to sufficiently low temperature
these in-plane charge qubit states are quantized and circuit quantum
electrodynamic methods can be used to control and readout single qubit
operations. Perspectives for quantum simulations with quantum dots
systems will be discussed.
 

!split
===== Literature and more reading  =====


o "Justyna P. Zwolak and Jacob M. Taylor, Rev. Mod. Phys. 95, 011006, Advances in automation of quantum dot devices control":"https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.95.011006"
o "Pollanen and many other, Accelerating Progress Towards Practical Quantum Advantage: The Quantum Technology Demonstration Project Roadmap":"https://arxiv.org/pdf/2210.14757.pdf"
o "Osada et al, introduction to quantum technologies, Springer, 2022":"https://link.springer.com/book/10.1007/978-981-19-4641-7"
o "Original inspiration a series of articles of Loss and DiVincenzo from the nineties, Quantum Computation with Quantum Dots":"https://journals.aps.org/pra/pdf/10.1103/PhysRevA.57.120"



!split
===== Quantum Engineering =====

!bblock Quantum computing requirements
o be scalable
o have qubits that can be entangled
o have reliable initializations protocols to a standard state
o have a set of universal quantum gates to control the quantum evolution
o have a coherence time much longer than the gate operation time
o have a reliable read-out mechanism for measuring the qubit states
o ...more
!eblock

!split
===== Candidate systems =====

!bblock
o Superconducting Josephon junctions
o Single photons
o "Trapped ions and atoms":"https://journals.aps.org/rmp/pdf/10.1103/RevModPhys.93.025001"
o Nuclear Magnetic Resonance
o _Quantum dots, experiments at MSU_
o Point Defects in semiconductors
o ...more
!eblock

!split
===== Electrons (quantum dots) on superfluid helium =====

Electrons on _superfluid helium represent_ (see URL:"https://www.youtube.com/watch?v=EuDuM-fe-lA&ab_channel=JoshuahHeath") a promising platform for investigating
strongly-coupled qubits.

A systematic investigation of the
controlled generation of entanglement between two trapped electrons
under the influence of coherent microwave driving pulses, taking into
account the effects of the Coulomb interaction between electrons, may be of great interest for quantum information processing using
trapped electrons.



!split
===== To read more =====

o See "Single electrons on solid neon as a solid-state qubit platform, David Schuster et al, Nature _605_, 46–50 (2022)":"https://www.nature.com/articles/s41586-022-04539-x"
o See Mark Dykman et al, Spin dynamics in quantum dots on liquid helium, PRB _107_. 035437 (2023) at URL:"https://link.aps.org/doi/10.1103/PhysRevB.107.035437".



!split
===== Experimental setup I =====

FIGURE: [qcfigures/Elhelium1.png, width=700 frac=1.3]

!split
===== More on experimental setup II =====

FIGURE: [qcfigures/Elhelium2.png, width=700 frac=1.3]

!split
===== More on experimental setup III =====

FIGURE: [qcfigures/Elhelium3.png, width=700 frac=1.3]

!split
===== Experimental set up =====

FIGURE: [qcfigures/figure1.png, width=600 frac=0.9]

o (a) Schematic of the microdevice, where two electrons are trapped in a double-well potential created by electrodes 1-7. The read-out is provided by two superconducting resonators dispersively coupled to  electron's in-plane motional states.
o (b) Coupling constants from each individual electrode beneath the helium layer.
o (c+d) The electron's energy in a  double-well electrostatic potential (solid line). Dashed and dot-dashed lines represent the harmonic approximations of left and right wells respectively.






!split
=====  Entanglement =====

!bblock
"Entanglement":"https://link.springer.com/content/pdf/10.1007/s11232-007-0098-9.pdf" is the fundamental characteristic that distinguishes
quantum systems composed of two or more coupled objects from their
classical counterparts. The study of entanglement in precisely
engineered quantum systems with countably many degrees of freedom is
at the forefront of modern physics and is a key resource in quantum
information science (QIS). This is particularly true in the
development of two-qubit logic for quantum computation.
!eblock

!bblock
The
generation of two-qubit entanglement has been demonstrated in a wide
variety of physical systems used in present-day quantum computing,
including superconducting circuits, trapped
ions, semiconductor quantum dots, color-center
defects in diamond, and neutral atoms in optical
lattices, just to name a few.
!eblock

!split
===== More on Entanglement =====

!bblock
Generating an entanglement between two quantum systems rely on
exploiting interactions in a controllable way. The details in the
interaction Hamiltonian between two systems defines the protocol
schemes for two-qubit logic.
!eblock

!bblock
In  superconducting circuits the
interaction between qubits may arise from direct capacitive coupling
between circuit elements or by indirect coupling of two qubits to a
common resonator (virtually populating resonator mode) which results
in a non-local Hamiltonian in the form of exchange
interaction. This allow to implement various
schemes for entanglement, such as controlled-phase
gate, resonator-induced phase
gate, cross-resonance gates etc.
!eblock

!split
===== Entanglement gates in trapped ions and more =====

!bblock
Entanglement gates in trapped ions are
produced by means of the Coulomb interaction, where shared motional
modes of two or more ions, entangled to their internal states, used
for transferring excitations between ion
qubits. This has been experimentally
demonstrated.
!eblock


!bblock
In photonic quantum
computing schemes two-qubit entangling operations are realized by
nonlinear interactions between two photons scattering from quantum
dots, plasmonic nanowires, diamond vacancy centers and others embedded
into waveguides. Two-qubit gates in
semiconductor quantum dots are based on spin-spin exchange
interactions or generated
by coupling to a superconducting resonator via artificial spin-orbit
interaction.
!eblock





!split
===== Quantum dots and the Coulomb interaction =====

!bblock
Coulomb interaction governed entanglement can be realized in
the system of electrons on the surface of superfluid helium, where
qubit states are formed by in-plane lateral motional or out-of plane
Rydberg states. Trapped near the surface of liquid helium these states
have different spatial charge configurations and the wavefunctions of
different electrons do not overlap.
!eblock

!bblock
This results in a strong exchange
free Coulomb interaction which depends on the states of the
electrons. The lack of disorder in the systems
also leads to slow electron decoherence, which has attracted interest
to the system as a candidate for quantum information
processing.
!eblock

!split
===== Electrons on helium is another qubit platform =====

_To our knowledge two qubit gates have never been discussed in a proper manner for these systems._

!bblock
The static Coulomb interaction arises from a virtual photon exchange
 process between two charge particles according to quantum
 electrodynamics. This results in a correlated motion of two charges
 generating quantum entanglement. 
!eblock

!split
===== Surface state electrons (SSE) =====

!bblock
Surface state electrons (SSE) 'floating' above liquid helium
originates from quantization of electron's perpendicular to the
surface motion in a trapping potential formed by attractive force from
image charge and a large $\sim$ 1 eV barrier at the liquid-vacuum
interface. At low temperatures the SSE are trapped in the lowest
Rydberg state for vertical motion some 11 nm above the helium surface,
which is perfectly clean and has a permittivity close to that of
vacuum.
!eblock

!bblock
The weak interaction with rthe enviroment, which is mainly governed
by interaction with quantized surface capillary waves (ripplons) and
bulk phonons, ensures long coherence times - a vital ingredient for
any qubit platform. 
!eblock


!split
===== Calculational details =====

Hamiltonian:
!bt
\begin{align}
\hat{H} &=\frac{\hat{p}_1^2}{2} + \sum_{i = 1}^7 V_i\alpha_i[\hat{x}_1] + \frac{\hat{p}_2^2}{2} + \sum_{i = 1}^7 V_i\alpha_i[\hat{x}_2] + \frac{\kappa}{\sqrt{(\hat{x}_1-\hat{x}_2)^2 + a^2}}\\
&= h[\hat{p}_1,\hat{x}_1] + h[\hat{p}_2,\hat{x}_2] + u[\hat{x}_1,\hat{x}_2]
\end{align}
!et

FIGURE: [qcfigures/well_basis.png, width=600 frac=0.8]


!split
===== Calculational details =====

Hamiltonian:
!bt
\begin{align}
\hat{H} &= \frac{\hat{p}_1^2}{2} + v[\hat{x}_1] + \frac{\hat{p}_2^2}{2} + v[\hat{x}_2] + \frac{\kappa}{\sqrt{(\hat{x}_1-\hat{x}_2)^2 + a^2}}\\
&= h[\hat{p}_1,\hat{x}_1] + h[\hat{p}_2,\hat{x}_2] + u[\hat{x}_1,\hat{x}_2]
\end{align}
!et

FIGURE: [qcfigures/wells.png, width=600 frac=0.8]


!split
===== Calculational details =====

Hamiltonian:
!bt
\begin{align}
\hat{H} &= \frac{\hat{p}_1^2}{2} + v[\hat{x}_1] + \frac{\hat{p}_2^2}{2} + v[\hat{x}_2] + \frac{\kappa}{\sqrt{(\hat{x}_1-\hat{x}_2)^2 + a^2}} \\
&\equiv h[\hat{p}_1,\hat{x}_1] + h[\hat{p}_2,\hat{x}_2] + u[\hat{x}_1,\hat{x}_2]
\end{align}
!et

Energy states:
!bt
\begin{equation}
\vert\Phi_k\rangle = \sum_{i < j} C_{ij, k}\frac{\vert \varphi_i \varphi_j\rangle - \vert \varphi_j \varphi_i\rangle}{\sqrt{2}},
\end{equation}
!et
(Slater basis)


!split
===== Calculational details =====

Hamiltonian:
!bt
\begin{align}
\hat{H} &= \frac{\hat{p}_1^2}{2} + v^L[\hat{x}_1] + \frac{\hat{p}_2^2}{2} + v^R[\hat{x}_2] + \frac{\kappa}{\sqrt{(\hat{x}_1-\hat{x}_2)^2 + a^2}} \\
&\equiv h^L[\hat{p}_1,\hat{x}_1] + h^R[\hat{p}_2,\hat{x}_2] + u[\hat{x}_1,\hat{x}_2]
\end{align}
!et

Energy states:
!bt
\begin{equation}
\vert\Phi_k\rangle = \sum_{i} \sum_{j} C_{ij, k}\vert \varphi^L_i \varphi^R_j\rangle,
\end{equation}
!et
(product basis)


!split
===== Calculational details =====

Energy states:
!bt
\begin{equation}
\vert\Phi_k\rangle = \sum_{i} \sum_{j} C_{ij, k}\vert \varphi^L_i \varphi^R_j\rangle,
\end{equation}
!et
(product basis)

FIGURE: [qcfigures/Hartree_states.png, width=700 frac=0.9]


!split
===== Calculational details =====

Hamiltonian:
!bt
\begin{align}
\hat{H} &= \frac{\hat{p}_1^2}{2} + v^L[\hat{x}_1] + \frac{\hat{p}_2^2}{2} + v^R[\hat{x}_2] + \frac{\kappa}{\sqrt{(\hat{x}_1-\hat{x}_2)^2 + a^2}} \\
&\equiv h^L[\hat{p}_1,\hat{x}_1] + h^R[\hat{p}_2,\hat{x}_2] + u[\hat{x}_1,\hat{x}_2]
\end{align}
!et

Energy states:
!bt
\begin{equation}
\vert\Phi_k\rangle = \sum_{i} \sum_{j} C_{ij, k}\vert \varphi^L_i \varphi^R_j\rangle,
\end{equation}
!et
(Hartree basis)


!split
===== Calculational details =====

Hamiltonian:
!bt
\begin{align}
\hat{H} &= \frac{\hat{p}_1^2}{2} + v^L[\hat{x}_1] + \frac{\hat{p}_2^2}{2} + v^R[\hat{x}_2] + \frac{\kappa}{\sqrt{(\hat{x}_1-\hat{x}_2)^2 + a^2}} \\
&\equiv h^L[\hat{p}_1,\hat{x}_1] + h^R[\hat{p}_2,\hat{x}_2] + u[\hat{x}_1,\hat{x}_2]
\end{align}
!et

Energy states:
!bt
\begin{equation}
\vert\Phi_k\rangle = \sum_{i = 0}^{N^L} \sum_{j = 0}^{N^R} C_{ij, k}\vert \varphi^L_i \varphi^R_j\rangle,
\end{equation}
!et
(Hartree basis)


!split
===== Calculational details =====

Energy states:
!bt
\begin{equation}
\vert\Phi_k\rangle = \sum_{i = 0}^{N^L} \sum_{j = 0}^{N^R} C_{ij, k}\vert \varphi^L_i \varphi^R_j\rangle,
\end{equation}
!et
(Hartree basis)

FIGURE: [qcfigures/Hartree_coefs.png, width=700 frac=0.9]


!split
===== Calculational details =====

Hamiltonian:
!bt
\begin{align}
\hat{H} &= \frac{\hat{p}_1^2}{2} + v^L[\hat{x}_1] + \frac{\hat{p}_2^2}{2} + v^R[\hat{x}_2] + \frac{\kappa}{\sqrt{(\hat{x}_1-\hat{x}_2)^2 + a^2}} \\
&\equiv h^L[\hat{p}_1,\hat{x}_1] + h^R[\hat{p}_2,\hat{x}_2] + u[\hat{x}_1,\hat{x}_2]
\end{align}
!et

Energy states:
!bt
\begin{equation}
\vert\Phi_k\rangle = \sum_{i = 0}^{N^L} \sum_{j = 0}^{N^R} C_{ij, k}\vert \varphi^L_i \varphi^R_j\rangle,
\end{equation}
!et
(Hartree basis)


!split
===== Results and discussions =====
By adjusting the potential we can change the anharmonicities and detuning of the wells.
o What values of these give interesting interactions?
o Inspiration from superconducting qubits, see High-Contrast $ZZ$ Interaction Using Superconducting Qubits with Opposite-Sign Anharmonicity, "Zhao et al Phys. Rev. Lett. 125, 200503":"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.125.200503"

!split
We search for well configurations corresponding to three different types of interaction between the two electrons.

o In configuration I we address both qubits independently and can thereby perform single-qubit state rotations and measurements.
o Configurations II and III correspond to avoided level crossings between two ($E_{01}, E_{10}$) and three ($E_{11}, E_{20}, E_{02}$) energy levels respectively, where the electrons' motion becomes correlated, that is they are entangled. 

Both anharmonicity and detuning changes with the shape of our well.
We create a voltage parameterization
!bt
\begin{equation}
V(\lambda) = (1-\lambda)V_\mathrm{I} + \lambda V_\mathrm{III}
\end{equation}
!et

!split
===== Entanglement and more  =====

FIGURE: [qcfigures/crossings-entropies-anharmonicities-1.png, width=800 frac=0.8]


!split
===== Legend to figure =====

o (a) In this figure we have plotted the transition energy from the ground state to the labeled excited state as a function of the voltage parameter $\lambda$. The labeled states are the computational basis states when $\lambda = 0$.
o (b) The von Neumann entropy of the five lowest excited states of the two-body Hamiltonian as a function of the configuration parameter $\lambda$. The ground state has zero entropy, or close to zero entropy. We have included the points for the double and triple degeneracy points. $\lambda_{II}$ and $\lambda_{III}$ in the figure. The von Neumann entropy is calculated using the binary logarithm.
o (c) In this figure we have plotted the anharmonicites for the left well ($\alpha^L$) and the right well ($\alpha^R$) as a function of the well parameterization $\lambda$. We have also included the detuning $\Delta \omega = \omega^R - \omega^L$ between the two wells. We have marked configuration II at $\lambda_{II} \approx 0.554$ and configuration III at $\lambda_{III} = 1$.


!split
===== Particle densities and coefficients =====

FIGURE: [qcfigures/configuration_I-1.png, width=600 frac=0.8]

!split
===== Potential wells, the one-body densities, and single-particle states =====

FIGURE: [qcfigures/configuration_II_and_III-1.png, width=600 frac=1.0]

!split
===== Where we are now =====

o Adding time-dependent studies of two electrons in two wells in one and two dimensions
o Studies of the time-evolution of entangled states (now two electrons only)
o Use theory to find optimal experimental setup
o Expect two-electron system realized experimentally in approx $1$ year, great potential for studies of quantum simulations

!split
===== Plans =====

o Add two and three-dimensions in order to simulate in  a more realistic way such many-body systems.
o Develop time-dependent FCI code, useful up to approximately 10 particles with _effective_ (and effective Hilbert space) Hamiltonians in two and three dimensions
o Develop codes for studies of entanglement as function of time
o Do tomogrophy and extract density matrix and compare with experiment.
o Study the feasibility of various setups for quantum simulations of specific Hamiltonians such as the Lipkin model
o For larger many-body systems, study for example time-dependent CC theory

